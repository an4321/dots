set shell fish
set scrolloff 10
set ignorecase true
set previewer "~/.config/lf/preview"

map ga cd ~/Desktop
map gd cd ~/Downloads
map gD cd ~/Documents
map gp cd ~/Pictures
map gs cd ~/Pictures/screenshots
map gv cd ~/Videos
map gm cd ~/Music
map gn cd ~/notes
map g. cd ~/dots
map g, cd ~/.config
map gl cd ~/.local

map J :push 5j
map K :push 5k
map . set hidden!
map x :cut
map X $extract "$f"
map <esc> clear
map <tab> !true
map ; :push &
map o :&xdg-open "$f"
map e $$EDITOR "$f"
map E $sudoedit "$f"
map i $fish
map I :& test -n "$TMUX" && tmux new-window || kitty
map t :& test -n "$TMUX" && tmux new-window -a -n lf 'lf' || kitty -e lf
map <a-a> !t "$PWD"
# v: invert selection

cmd jump ${{
	set res (jump list | fzf --height=100%)
	lf -remote "send $id cd '$res'"
}}
map z jump

cmd locate ${{
	set res $(fd . | fzf --height=100%)
	lf -remote "send $id select '$res'"
}}
map <c-f> locate

cmd trash %{{
	echo " confirm (y/N): " && read res
	test "$res" = "y" && printf "%s\n" $fx | xargs -I {} env trash {}
	test "$res" = "yes" && printf "%s\n" $fx | xargs -I {} env rm -rf {}
	echo
}}
map d trash
map <delete> trash
map D $trash-restore

cmd mk %{{
	echo " make: " && read res
	test -z "$res" && echo && return
	if string match -r '/$' "$res"
		mkdir -p $res
	else
		touch "$res"
	end
	lf -remote "send $id select '$res'"
}}
map a mk

cmd on-redraw &{{
	set ratio "1:2:3"
	test "$lf_width" -le 100 && set ratio "1:2"
	lf -remote "send $id set ratios $ratio"
}}
map R on-redraw

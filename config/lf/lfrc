set shell bash
set scrolloff 10
set ignorecase true
set previewer "~/.config/lf/preview"

map ga cd ~/Desktop
map gd cd ~/Downloads
map gD cd ~/Documents
map gp cd ~/Pictures
map gs cd ~/Pictures/Screenshots
map gv cd ~/Videos
map gm cd ~/Music
map gn cd ~/notes
map gb cd ~/notes/books/2025
map g. cd ~/dots/config
map g, cd ~/.config

map J :push 5j
map K :push 5k
map i $fish
map I :&[[ -n "$TMUX" ]] && tmux new-window || kitty
map . set hidden!
map x :cut
map ; :push &
map o :&xdg-open "$f"
map e $nvim "$f"
map E $sudoedit "$f"
map <esc> clear
map <tab> !true
map <a-a> !t "$PWD"

# v: invert select
# c: clear copy/cut

cmd locate ${{
    result=$(find . -type f -o -type d | fzf-tmux -p 40%,80%)
    lf -remote "send $id select '$result'"
}}
map <c-f> locate

cmd jump ${{
    result="$(zoxide query -i)"
    lf -remote "send $id cd '$result'"
}}
map z jump

cmd trash %{{
    echo " Confirm (y/N): "
    read -r response
    if [ "$response" = "y" ] || [ "$response" = "o" ]; then
        for file in $fx; do
            trash "$file"
        done
        echo "done"
    else
        echo "exited"
    fi
}}
map d trash

cmd on-redraw &{{
    if [ "$lf_width" -le 50 ]; then
        lf -remote "send $id set nopreview"
        lf -remote "send $id set ratios 1"
    elif [ "$lf_width" -le 100 ]; then
        lf -remote "send $id set ratios 1:2"
    else
        lf -remote "send $id set ratios 1:2:3"
    fi
}}
map R on-redraw

cmd mk %{{
    echo " Make: "
    read -r response
    if [[ $response =~ /$ ]]; then
        mkdir -p $response && lf -remote "send $id select '$response'"
    elif [[ $response =~ \.$ ]]; then
        name="${response%.*}"
        mkdir -p "$name" && lf -remote "send $id cd '$name'"
    else
        touch $response && lf -remote "send $id select '$response'"
    fi
}}
map a mk

#!/bin/bash

playlist=false
shuffle=false
ytdl_format="bestaudio"

# Parse command line options
while getopts "sp" opt; do
    case $opt in
        s) shuffle=true ;;
        p) playlist=true ;;
        \?) echo "Usage: $0 [-s] [-p] <yt-url>"; exit 1 ;;
    esac
done

# Shift the options to process the remaining arguments
shift $((OPTIND-1))
url="$1"

if [ -z "$url" ]; then
    echo "Usage: $0 [-p] [-s] <yt-url>"
    echo -e "\t -p Playlist in series"
    echo -e "\t -s Shuffel playlist"
    exit 1
fi

play_audio() {
    video_url="https://www.youtube.com/watch?v=$1"

    echo ""
    title=$(curl -s "$video_url" | grep -oP '<title>\K[^<]*')
    echo -e "\e[0;37mTitle:\e[0m \e[32m$title\e[0m"

    if $resume_playback; then
        mpv --ytdl-format="$ytdl_format" "$video_url"
    else
        mpv --ytdl-format="$ytdl_format" --no-resume-playback --speed=1 "$video_url"
    fi

}

if $playlist; then
    video_ids=$(yt-dlp --skip-download --get-id --flat-playlist --no-warnings "$url")

    if $shuffle; then
        while true; do
            resume_playback=false
            play_audio $(echo $video_ids | tr ' ' '\n' | shuf | tr '\n' ' ')
            read -s -n1 -t1 keypress && [[ $keypress == $'q' ]] && break
        done
    else
        for video_id in $video_ids; do
            resume_playback=false
            play_audio $video_id
            read -s -n1 -t1 keypress && [[ $keypress == $'q' ]] && break
        done
    fi

else
    resume_playback=true
    play_audio $(yt-dlp --skip-download --get-id --no-warnings "$url")
fi


#!/bin/env bash

set -eEo pipefail

all=false
[ "$1" = "all" ] && all=true

ask() {
    [ "$all" = "true" ] && return 0
        
    local yn
    echo
    read -p "$1? [Y/n] " yn 
    echo
    case "$yn" in
        [yY] | "") return 0 ;;
        *) return 1 ;;
    esac
}

create_script() {
    echo -e "$2" > "$1" && chmod +x "$1"; 
}

install() { sudo apt install -y "$@"; }

echo -e "\n\033[30;44m Debian Setup Script \033[0m\n"
mkdir -p ~/.local/bin

echo "Updating package list..."
sudo apt update

if ask "Install base tools"; then
    install curl fish zoxide tmux lf fzf htop fd-find ripgrep bat trash-cli stow # fastfetch
    ln -sf $(which batcat) ~/.local/bin/bat
    ln -sf $(which fdfind) ~/.local/bin/fd
fi

if ask "Build DWM"; then
    install copyq dunst feh nemo i3lock rofi arandr
    install brightnessctl pamixer pavucontrol imagemagick libnotify-bin fonts-noto-color-emoji
    install libx11-dev libxft-dev libxinerama-dev xorg psmisc libxrandr-dev 
    create_script ~/.local/bin/emoji-menu '#!/bin/env bash\nenv cat ~/.config/tofi/{emotes,nf-icons} | rofi -dmenu -matching regex | cut -d " " -f 1 | tr -d "\\n" | xsel --clipboard'
    create_script ~/.local/bin/notes '#!/bin/env sh\nkitty -e nvim --cmd "cd ~/notes" ~/notes/index.md'
    cd ~/config/dwm && sudo make clean install && make clean
fi

if ask "Install pipewire"; then
    install pipewire pipewire-audio-client-libraries
    install libpipewire-0.3-0 libpipewire-0.3-dev libpipewire-0.3-modules
    install libspa-0.2-bluetooth libspa-0.2-dev libspa-0.2-jack libspa-0.2-modules
    systemctl --user daemon-reload
    systemctl --user --now enable pipewire pipewire-pulse
fi

ask "Setup bluetooth" && install bluez bluetooth blueman && sudo systemctl enable bluetooth

ask "Install TLP" && install tlp && sudo tlp start

ask "Install nerd fonts" && ~/dots/bin/install-nf "JetBrainsMono" "Hack"

ask "Make fish the default shell" && chsh -s "$(which fish)"

if ask "Install brave"; then
    curl -fsS https://dl.brave.com/install.sh | sh
    create_script ~/.local/bin/brave '#!/bin/env sh\nbrave-browser --force-device-scale-factor=1.2 $@'
fi

if ask "Install kitty"; then
    curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
    ln -s ~/.local/kitty.app/bin/kitty ~/.local/bin
    ln -s ~/.local/kitty.app/bin/kitten ~/.local/bin
fi

if ask "Install nvim"; then
    curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz
    tar xzvf nvim-linux-x86_64.tar.gz
    mv ./nvim-linux-x86_64 ~/.local/nvim
    ln -s ~/.local/nvim/bin/nvim ~/.local/bin
fi

if ask "Install golang"; then
    LATEST_GO_VERSION=$(curl -s https://go.dev/VERSION?m=text | head -n 1)
    wget https://go.dev/dl/${LATEST_GO_VERSION}.linux-amd64.tar.gz
    sudo rm -rf $HOME/.local/go
    sudo tar -C $HOME/.local/go -xzf ${LATEST_GO_VERSION}.linux-amd64.tar.gz
fi

if ask "Build nsxiv"; then
    sudo apt install -y libexif-dev libfontconfig1-dev libinotifytools0-dev
    git clone --depth 1 https://codeberg.org/nsxiv/nsxiv.git
    cd nsxiv
    cp config.def.h config.h

    sed -i '
    s/{ 32, 64, 96, 128, 160 }/{ 64, 96, 128, 160, 190, 240, 300 }/
    s/THUMB_SIZE = 3/THUMB_SIZE = 4/
    s/{ "Nsxiv.window.background",   "white"/{ "Nsxiv.window.background",   "black"/
    s/{ "Nsxiv.window.foreground",   "black"/{ "Nsxiv.window.foreground",   "white"/
    s/"monospace-8"/"monospace-16"/' config.h

    sudo make install && sudo make install-desktop install-icon

    cd ..
    rm -rf nsxiv
    echo "installed successfully"
fi
